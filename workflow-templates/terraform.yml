name: 'Stigian Terraform Runner'

on:
  push:
    paths:
    - 'src/iac/**'
    branches: [ $default-branch ]
  pull_request:
    paths:
    - 'src/iac/**'
    branches: [ $default-branch ]

env:
  TERRAFORM_VERSION: "1.5.5"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    permissions:
        contents: read
        id-token: write
        pull-requests: write

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Configure AWS CLI credentials
    - name: Configure credentials
      id: install
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: "us-east-2"
        role-to-assume: ${{ secrets.AWS_TF_RUNNER_ROLE_ARN }}
        role-session-name: "StigianGithubTFRunner"

    # Install the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    # Initialize terraform working directory
    - name: Terraform Init
      id: init
      run: terraform -chdir=src/iac init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: fmt
      run: terraform -chdir=src/iac fmt -check

    # Terraform Validate
    - name: Terraform Validate
      id: validate
      run: terraform -chdir=src/iac validate -no-color

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform -chdir=src/iac plan -no-color
      continue-on-error: true

      # On push to main, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform -chdir=src/iac apply -auto-approve

    # Leave a comment for the plan in the PR itself showing output of plan to enable review prior to merge
    - name: Update PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: TF Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
